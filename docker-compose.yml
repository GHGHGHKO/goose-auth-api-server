# Use postgres/example user/password credentials
version: '3'

services:
  goose-auth-api:
    image: gudrb963/goose-auth-api:latest
    container_name: goose-auth-api
    build:
      context: .
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - vault
      - redis
    environment:
      - spring_cloud_vault_uri=http://vault:8200
      - spring_cloud_vault_token=insert-your-TOKEN
      - spring_profiles_active=dev
      - spring_redis_host=redis
    volumes:
      - ./volumes/api/logs:/volumes/api/logs

  postgres:
    image: postgres:13
    container_name: goose-auth-api-postgres
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: gooseauth
      POSTGRES_PASSWORD: gooseauth
      POSTGRES_DB: gooseauth
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "gooseauth"]
      interval: 5s
      retries: 5
    restart: always

  redis:
    image: redis:latest
    container_name: goose-auth-api-redis
    ports:
      - "6379:6379"
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always

  vault:
    image: vault:latest
    container_name: goose-auth-api-vault
    ports:
      - "8200:8200"
    restart: always
    volumes:
      - ./volumes/logs:/vault/logs
      - ./volumes/file:/vault/file
      - ./volumes/config:/vault/config
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=/vault/config/vault.json

volumes:
  postgres-db-volume:
